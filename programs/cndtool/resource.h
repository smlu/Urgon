#ifndef CNDTOOL_RESOURCE_H
#define CNDTOOL_RESOURCE_H
#include <exception>
#include <filesystem>
#include <string>
#include <string_view>
#include <vector>

#include <libim/content/asset/animation/animation.h>
#include <libim/content/asset/cog/cog.h>
#include <libim/content/asset/cog/cogscript.h>
#include <libim/content/asset/cog/impl/grammer/parse_utils.h>
#include <libim/content/asset/cog/impl/grammer/parser.h>
#include <libim/content/audio/soundbank.h>

#include <libim/io/vfs.h>
#include <libim/log/log.h>
#include <libim/types/indexmap.h>
#include <libim/types/sharedref.h>
#include <libim/types/string_map.h>
#include <libim/utils/utils.h>

namespace cndtool {
     namespace fs = std::filesystem;
    using namespace libim;
    using namespace libim::content::asset;
    using namespace libim::content::audio;

    constexpr std::string_view   kDefaultStaticResourcesFilename = "jones3dstatic.cnd";

    constexpr inline SoundHandle kDefaultStartSoundHandle  = SoundHandle(349); // 349 is the next sound handle seed stored in original jones3dstatic.cnd
    constexpr inline std::size_t kSoundbankStaticTrackIdx  = 0;
    constexpr inline std::size_t kSoundbankNormalTrackIdx  = 1;

    // limits
    constexpr inline std::size_t kMaxTemplates = 1024;
    constexpr inline std::size_t kMaxThings    = 2304;

    constexpr static std::string_view kAnimationDir1 = "3do/key";
    constexpr static std::string_view kAnimationDir2 = "key";
    constexpr static std::string_view kCogScriptDir  = "cog";
    constexpr static std::string_view kMaterialDir   = "mat";
    constexpr static std::string_view kSoundDir1     = "sound";
    constexpr static std::string_view kSoundDir2     = "wv";
    constexpr static std::string_view kSoundDir3     = "wav";

    constexpr inline std::size_t getSoundBankTrackIdx(const bool isStatic) {
        return isStatic ? kSoundbankStaticTrackIdx : kSoundbankNormalTrackIdx;
    }

    constexpr inline SoundHandle getDefaultStartSoundHandle(const bool isStatic) {
        return isStatic ? SoundHandle(0) : kDefaultStartSoundHandle;
    }

    SharedRef<InputStream> searchFile(const VirtualFileSystem& vfs, const std::vector<fs::path>& folders, std::string_view filename)
    {
        for (const auto& dir : folders)
        {
            if( auto optfile = vfs.findFile(dir / filename)){
                return optfile.value();
            }
        }
        // No file was found in dirs try to get file from root or throw an exception
        return vfs.getFile(filename);
    }

    IndexMap<Animation> loadAnimations(const VirtualFileSystem& vfs, const std::vector<std::string>& animFilenames)
    {
        IndexMap<Animation> animations;
        for (const auto& animFilename : animFilenames)
        {

            auto file = searchFile(vfs, { kAnimationDir1, kAnimationDir2 }, animFilename);
            auto anim = keyLoad(TextResourceReader(file.get()));
            animations.pushBack(animFilename, std::move(anim));
        }
        return animations;
    }

    [[nodiscard]] IndexMap<Material> loadMaterials(const VirtualFileSystem& vfs, const std::vector<std::string>& materialFilenames)
    {
        IndexMap<Material> materials;
        for (const auto& matFilename : materialFilenames)
        {
            auto file = searchFile(vfs, { kMaterialDir }, matFilename);
            auto mat  = matLoad(file.get());
            materials.pushBack(matFilename, std::move(mat));
        }
        return materials;
    }

    void loadSounds(const VirtualFileSystem& vfs, SoundBank& bank, std::size_t trackIdx, const std::vector<std::string>& soundFilenames)
    {
        for (const auto& sndFilename : soundFilenames)
        {
            auto file = searchFile(vfs, { kSoundDir1, kSoundDir2, kSoundDir3 }, sndFilename);
            bank.loadSound(file.get(), trackIdx);
        }
    }

    [[nodiscard]] libim::IndexMap<SharedRef<CogScript>> loadCogScripts(const VirtualFileSystem& vfs, const std::vector<std::string>& scripts, bool bFixCogScripts)
    {
        using namespace libim;
        using namespace libim::content::asset;
        namespace fs = std::filesystem;

        IndexMap<SharedRef<CogScript>> stable;
        stable.reserve(scripts.size());

        for(const auto& sname : scripts)
        {
            auto file = searchFile(vfs, { kCogScriptDir }, sname);
            stable.emplaceBack(
                sname,
                loadCogScript(file.get(), /*load description*/true)
            );

            if(bFixCogScripts) {
                imfixes::fixCogScript((--stable.end())->get());
            }
        }
        return stable;
    }

    void verifyCogs(const std::vector<SharedRef<Cog>>& cogs)
    {
        using namespace libim::content::asset;
        for (const auto [cidx, cog]  : utils::enumerate(cogs))
        {
            for (const auto& sym : cog->script->symbols)
            {
                if (sym.isLocal || sym.type == CogSymbol::Message) {
                    continue;
                }

                const auto getValue = [&]() -> const CogSymbolValue&
                {
                    try {
                        return sym.valueOrDefault(cog->vtid);
                    }
                    catch (...) {
                        throw std::runtime_error(
                            utils::format("COG at index % is missing value for non-local symbol '%'", cidx, sym.name)
                        );
                    }
                };

                if (!is_valid_raw_init_value(sym.type, getValue())) {
                    throw std::runtime_error(
                        utils::format("COG at index % has invalid value for non-local symbol '%' of type %",
                            cidx, sym.name, cogGetSymbolTypeName(sym.type)
                        )
                    );
                }
            }
        }
    }

    template<typename SetT>
    void filterStringList(std::vector<std::string>& list, const SetT& filter)
    {
        if (filter.size() == 0) {
            return;
        }

        list.erase(
            std::remove_if(list.begin(), list.end(), [&filter](const auto& str) {
                return filter.contains(str);
            }),
            list.end()
        );
    }

    struct StaticResourceNames
    {
        std::string filename; //The name of the file containing the static resource names
        StringSet<> keyframes;
        StringSet<> models;
        StringSet<> sounds;
        StringSet<> scripts;
        StringSet<> sprites;
        IndexMap<uint32_t> materials;

        void setDefault()
        {
            filename = kDefaultStaticResourcesFilename;

            /* Sets default resource lists found in original jones3dstatic.cnd */
            sounds = {
                "mus_map.wav",
                "mus_gen_maploadloop.wav",
                "mus_enddemo.wav",
                "gen_whip_fire.wav",
                "gen_whip_pull.wav",
                "gen_whip_put.wav",
                "gen_pistol_fire.wav",
                "gen_pistol_pull.wav",
                "gen_pistol_put.wav",
                "gen_machete_fire.wav",
                "gen_machete_pull.wav",
                "gen_machete_put.wav",
                "gen_zippo_open.wav",
                "gen_zippo_close.wav",
                "fol_in_lwalkmetal.wav",
                "fol_in_rwalkmetal.wav",
                "fol_in_lrunmetal.wav",
                "fol_in_rrunmetal.wav",
                "fol_in_lwalkearth.wav",
                "fol_in_rwalkearth.wav",
                "fol_in_lrunearth.wav",
                "fol_in_rrunearth.wav",
                "fol_in_lwalkhard.wav",
                "fol_in_rwalkhard.wav",
                "fol_in_lrunhard.wav",
                "fol_in_rrunhard.wav",
                "fol_in_lwalkwater.wav",
                "fol_in_rwalkwater.wav",
                "fol_in_lrunwater.wav",
                "fol_in_rrunwater.wav",
                "fol_in_rwalkpuddle.wav",
                "fol_in_lwalkpuddle.wav",
                "fol_in_lrunpuddle.wav",
                "fol_in_rrunpuddle.wav",
                "fol_in_jumpearth.wav",
                "fol_in_landearth.wav",
                "fol_in_landhard.wav",
                "fol_in_landmetal.wav",
                "fol_in_landpuddle.wav",
                "fol_in_enterwater.wav",
                "fol_in_landhurt.wav",
                "fol_in_enterwaterslow.wav",
                "fol_in_exitwater.wav",
                "fol_in_hithard.wav",
                "fol_in_hitmetal.wav",
                "fol_in_hitearth.wav",
                "fol_in_lswimsurface.wav",
                "fol_in_rswimsurface.wav",
                "fol_in_treadsurface.wav",
                "fol_in_swimunder.wav",
                "fol_in_treadunder.wav",
                "gen_underwater_a.wav",
                "inv_close.wav",
                "inv_expand.wav",
                "inv_move.wav",
                "alt_arrive.wav",
                "inv_slide_to.wav",
                "mus_find.wav",
                "mus_flourish.wav",
                "inxj087.wav",
                "inxj088.wav",
                "inxj089.wav",
                "inxj092.wav",
                "gen_fists_fire.wav",
                "gen_bazooka_fire.wav",
                "gen_bazooka_pull.wav",
                "gen_bazooka_put.wav",
                "gen_mauser_fire.wav",
                "gen_rifle_pull.wav",
                "gen_rifle_put.wav",
                "gen_tokarev_fire.wav",
                "fol_in_lrunsnow.wav",
                "fol_in_rrunsnow.wav",
                "fol_in_lwalksnow.wav",
                "fol_in_rwalksnow.wav",
                "gen_simonov_fire.wav",
                "gen_submachine_fire.wav",
                "gen_shotgun_fire.wav",
                "gen_grenade_fire.wav",
                "inv_quicksave.wav",
                "gen_machete_hit_flesh.wav",
                "gen_machete_hit_stone.wav",
                "gen_machete_hit_metal.wav",
                "gen_machete_hit_wood.wav",
                "gen_machete_hit_vine.wav",
                "gen_machete_hit_web.wav",
                "gen_submachine_trail.wav",
                "gen_grenade_tick.wav",
                "gen_grenade_bounce.wav",
                "fol_in_lwalkwood.wav",
                "fol_in_rwalkwood.wav",
                "fol_in_lrunwood.wav",
                "fol_in_rrunwood.wav",
                "fol_in_landsnow.wav",
                "fol_in_landwood.wav",
                "gen_satchel_fire.wav",
                "gen_satchel_tick.wav",
                "gen_satchel_trip.wav",
                "mus_guybrush.wav",
                "gen_rocket.wav",
                "gen_whipswing.wav",
                "inxj139.wav",
                "inxj142.wav",
                "inxj002.wav",
                "inxj143.wav",
                "inxj008a.wav",
                "inxj146.wav",
                "inxj147.wav",
                "fol_in_jumpmetal.wav",
                "fol_in_jumpwater.wav",
                "fol_in_jumpsnow.wav",
                "fol_in_jumpwood.wav",
                "gen_grenade_pull.wav",
                "gen_grenade_put.wav",
                "imp1_chargeup.wav",
                "imp1_powerup.wav",
                "imp1_powerdown.wav",
                "imp1_on_loop.wav",
                "imp2_activate.wav",
                "imp2_powerup.wav",
                "imp2_powerdown.wav",
                "imp2_on_loop.wav",
                "imp3_activate.wav",
                "imp3_powerup.wav",
                "imp3_powerdown.wav",
                "imp3_on_loop.wav",
                "imp4_activate.wav",
                "imp4_powerup.wav",
                "imp4_powerdown.wav",
                "imp4_on_loop.wav",
                "imp5_chargeup.wav",
                "imp5_powerup.wav",
                "imp5_powerdown.wav",
                "imp5_on_loop.wav",
                "riv_splash_sm.wav",
                "lag_torp_explo_c.wav",
                "mus_gen_indydies1.wav",
                "inv_treasure.wav",
                "gen_machete_pull_uw.wav",
                "gen_machete_put_uw.wav",
                "gen_machete_fire_uw.wav",
                "gen_ricochet_a.wav",
                "gen_ricochet_b.wav",
                "inxj154.wav",
                "inxj155.wav",
                "inxj156.wav",
                "inxj157.wav",
                "gen_whip_unravel.wav",
                "gen_whip_ravel.wav",
                "fol_in_slide_1.wav",
                "fol_in_slide_2.wav",
                "fol_in_slide_3.wav",
                "fol_in_jumphard.wav",
                "fol_in_jumphardecho.wav",
                "fol_in_jumpwoodecho.wav",
                "fol_in_jumpearthecho.wav",
                "fol_in_jumpaet.wav",
                "fol_in_climb_down_onto.wav",
                "fol_in_climb_horiz.wav",
                "fol_in_climb_onto.wav",
                "fol_in_climb_vert_left.wav",
                "fol_in_climb_vert_right.wav",
                "inxj061.wav",
                "inxj224.wav",
                "gen_in_gasp.wav",
                "gen_in_die_uw.wav",
                "fol_in_aet_sector.wav",
                "gen_rocket_loop.wav",
                "gen_chalk.wav",
                "inxj016g.wav",
                "inxj017.wav",
                "inxj017a.wav",
                "inxj017e.wav",
                "inxj017f.wav",
                "inxj017g.wav",
            };

            materials = {
                {  "gen_4indy_shadow.mat"         , 0  },
                {  "gen_4indy_shadow_stretch.mat" , 1  },
                {  "jep_4shadow.mat"              , 2  },
                {  "inshoe.mat", 3  },
                {  "insole.mat", 4  },
                {  "inleg.mat", 5  },
                {  "inthigh.mat", 6  },
                {  "inpouch.mat", 7  },
                {  "inholst.mat", 8  },
                {  "inbutt.mat", 9  },
                {  "inhip.mat", 10  },
                {  "gen_4gun_bazooka.mat", 11  },
                {  "bgpalm.mat", 12  },
                {  "bgback.mat", 13  },
                {  "bgtop.mat", 14  },
                {  "bgstrings4.mat", 15  },
                {  "weapon_mchte_hndl.mat", 16  },
                {  "weapon_mchte_blde.mat", 17  },
                {  "weapon_4mauser_sde.mat", 18  },
                {  "ppsh-41_4.mat", 19  },
                {  "gen_4gun_rev.mat", 20  },
                {  "simonov4.mat", 21  },
                {  "weapon_4tokarev_sde.mat", 22  },
                {  "toz4.mat", 23  },
                {  "icon_camera_top.mat", 24  },
                {  "icon_camera_view.mat", 25  },
                {  "icon_camera_shtr.mat", 26  },
                {  "icon_camera_dial.mat", 27  },
                {  "icon_camera_ktop.mat", 28  },
                {  "icon_camera_ssde.mat", 29  },
                {  "icon_camera_lenz.mat", 30  },
                {  "icon_camera_knob.mat", 31  },
                {  "icon_camera_lsde.mat", 32  },
                {  "icon_camera_frnt.mat", 33  },
                {  "tchest_fr.mat", 34  },
                {  "tchest_cover.mat", 35  },
                {  "tchest_gold.mat", 36  },
                {  "icon_exit_frnt.mat", 37  },
                {  "icon_film_lid.mat", 38  },
                {  "icon_4film_tab.mat", 39  },
                {  "icon_film_lablea.mat", 40  },
                {  "icon_film_lableb.mat", 41  },
                {  "icon_film_rim.mat", 42  },
                {  "icon_hlthbig_top.mat", 43  },
                {  "icon_hlthbig_side.mat", 44  },
                {  "icon_hlthbig_hndl.mat", 45  },
                {  "icon_hlthbig_frnt.mat", 46  },
                {  "gen_icon_hlthsml.mat", 47  },
                {  "icon_radio_top.mat", 48  },
                {  "icon_radio_knob.mat", 49  },
                {  "icon_radio_frnt.mat", 50  },
                {  "icon_radio_back.mat", 51  },
                {  "icon_radio_side.mat", 52  },
                {  "telgrf_speed_cap.mat", 53  },
                {  "telgrf_speed_hndl.mat", 54  },
                {  "telgrf_speed_bolt.mat", 55  },
                {  "telgrf_4speed_cntrl.mat", 56  },
                {  "telgrf_speed_rim.mat", 57  },
                {  "telgrf_speed_panl.mat", 58  },
                {  "icon_tv_top.mat", 59  },
                {  "icon_tv_side.mat", 60  },
                {  "icon_tv_screen.mat", 61  },
                {  "icon_tv_back.mat", 62  },
                {  "icon_tv_knob.mat", 63  },
                {  "icon_type_top.mat", 64  },
                {  "icon_type_side.mat", 65  },
                {  "icon_type_back.mat", 66  },
                {  "icon_type_frnt.mat", 67  },
                {  "zibody.mat", 68  },
                {  "zilighter.mat", 69  },
                {  "idol_gold_base.mat", 70  },
                {  "idol_gold_frnt.mat", 71  },
                {  "idol_slvr_base.mat", 72  },
                {  "idol_slvr_frnt.mat", 73  },
                {  "coins_gold_bot.mat", 74  },
                {  "coins_gold_top.mat", 75  },
                {  "coins_slvr_bot.mat", 76  },
                {  "coins_slvr_top.mat", 77  },
                {  "ingot_gold_top.mat", 78  },
                {  "ingot_gold_end.mat", 79  },
                {  "ingot_slvr_top.mat", 80  },
                {  "ingot_slvr_end.mat", 81  },
                {  "weapon_grnad_top.mat", 82  },
                {  "weapon_grnad_hed.mat", 83  },
                {  "weapon_grnad_sde.mat", 84  },
                {  "weapon_grnad_pin.mat", 85  },
                {  "weapon_grnad_hndl.mat", 86  },
                {  "weapon_4grnad_rng.mat", 87  },
                {  "inskin.mat", 88  },
                {  "inhanbm.mat", 89  },
                {  "inhandf.mat", 90  },
                {  "inhanbk.mat", 91  },
                {  "inhansd.mat", 92  },
                {  "inindex.mat", 93  },
                {  "ziflame4_01.mat", 94  },
                {  "gen_a4sfx_lighterglow.mat", 95  },
                {  "handoptp.mat", 96  },
                {  "handopplm.mat", 97  },
                {  "whip.mat", 98  },
                {  "intorsb.mat", 99  },
                {  "intorsf.mat", 100  },
                {  "sheath.mat", 101  },
                {  "inshtorsbk.mat", 102  },
                {  "inshtorsf.mat", 103  },
                {  "inwhip.mat", 104  },
                {  "rftop.mat", 105  },
                {  "rfbm.mat", 106  },
                {  "gen_4icon_bonusmap.mat", 107  },
                {  "gen_4arrow_down.mat", 108  },
                {  "gen_4arrow_up.mat", 109  },
                {  "hud_health_base.mat", 110  },
                {  "hud_health_overlay.mat", 111  },
                {  "hud_item_pickup.mat", 112  },
                {  "hud_breath_overlay.mat", 113  },
                {  "hinticon.mat", 114  },
                {  "indyicon.mat", 115  },
                {  "icon_4hint_sde.mat", 116  },
                {  "icon_hint_botb.mat", 117  },
                {  "icon_hint_scrw.mat", 118  },
                {  "icon_4hint_top.mat", 119  },
                {  "icon_4hint_flmt.mat", 120  },
                {  "safront.mat", 121  },
                {  "saback.mat", 122  },
                {  "satag.mat", 123  },
                {  "inhdsd.mat", 124  },
                {  "inhdfr.mat", 125  },
                {  "inhair.mat", 126  },
                {  "inear.mat", 127  },
                {  "inmouthins.mat", 128  },
                {  "white.mat", 129  },
                {  "imp1sd_4.mat", 130  },
                {  "imp2bm.mat", 131  },
                {  "imp2sd.mat", 132  },
                {  "lxtop.mat", 133  },
                {  "imp2red4.mat", 134  },
                {  "imp2blue4.mat", 135  },
                {  "imp2s.mat", 136  },
                {  "imp3_peg.mat", 137  },
                {  "imp3_side.mat", 138  },
                {  "imp3_circles.mat", 139  },
                {  "imp3_y.mat", 140  },
                {  "imp3_moon.mat", 141  },
                {  "imp4_tube4.mat", 142  },
                {  "imp4_ringsd.mat", 143  },
                {  "imp4_stick.mat", 144  },
                {  "imp4_light4_01.mat", 145  },
                {  "gen_a4sprite_gunshot.mat", 146  },
                {  "gen_a4sprite_autoshot.mat", 147  },
                {  "gen_a4sfx_rbbeam_b.mat", 148  },
                {  "gen_4red.mat", 149  },
                {  "gen_a4sfx_lightning.mat", 150  },
                {  "gen_4x_x.mat", 151  },
                {  "rckt_bzoka_tail.mat", 152  },
                {  "rckt_bzoka_tip.mat", 153  },
                {  "gen_a4sfx_rokt_flame.mat", 154  },
                {  "gen_4x_check.mat", 155  },
                {  "gen_4x_circle.mat", 156  },
                {  "gen_4x_guy.mat", 157  },
                {  "gen_4x_happy.mat", 158  },
                {  "gen_4x_indy.mat", 159  },
                {  "gen_4x_la.mat", 160  },
                {  "gen_4x_usa.mat", 161  },
                {  "gen_4x_here.mat", 162  },
                {  "gen_4x_love.mat", 163  },
                {  "gen_4x_indy2.mat", 164  },
                {  "chalk_invnty_sde.mat", 165  },
                {  "chalk_invnty_top.mat", 166  },
                {  "in_face.mat", 167  },
                {  "bullet_top.mat", 168  },
                {  "gen_ammo_toz34.mat", 169  },
                {  "gen_ammo_tokarev.mat", 170  },
                {  "gen_ammo_tokatop.mat", 171  },
                {  "gen_ammo_tokabult.mat", 172  },
                {  "gen_ammo_simonov.mat", 173  },
                {  "gen_ammo_ppsh41.mat", 174  },
                {  "bullet_side.mat", 175  },
                {  "gen_a4sprite_hit.mat", 176  },
                {  "gen_a4sprite_gunpuff_a.mat", 177  },
                {  "gen_a4sprite_gunpuff_b.mat", 178  },
                {  "gen_a4sprite_blood.mat", 179  },
                {  "gen_4sfx_bazooka_smoke.mat", 180  },
                {  "gen_a4sprite_xpld3.mat", 181  },
                {  "gen_4sprite_bubble.mat", 182  },
                {  "gen_4sfx_ripple_ring_b.mat", 183  },
                {  "gen_icon_help_rim.mat", 184  },
                {  "gen_icon_help_frnt.mat", 185  },
                {  "gen_icon_help_back.mat", 186  },
                {  "hud_health_overlay_hit.mat", 187  },
                {  "hud_health_overlay_skull.mat", 188  },
                {  "gen_4gem_red.mat", 189  },
                {  "gen_4gem_green.mat", 190  },
                {  "gen_4gem_blue.mat", 191  },
                {  "bab_tudoor_key_frnt.mat", 192  },
                {  "bab_tudoor_key_sd.mat", 193  },
                {  "tblt_lck_frnt.mat", 194  },
                {  "tblt_lck_rim.mat", 195  },
                {  "idol_mrdk_wngs.mat", 196  },
                {  "idol_mrdk_chst.mat", 197  },
                {  "idol_mrdk_bck.mat", 198  },
                {  "idol_mrdk_bot.mat", 199  },
                {  "idol_mrdk_face.mat", 200  },
                {  "kit_ptch_sde.mat", 201  },
                {  "kit_ptch_top.mat", 202  },
                {  "cndl_wind_sdea.mat", 203  },
                {  "cndl_wind_topa.mat", 204  },
                {  "cndl_4wind_wik.mat", 205  },
                {  "cndl_wind_sdeb.mat", 206  },
                {  "cndl_wind_topb.mat", 207  },
                {  "cndl_wind_sdec.mat", 208  },
                {  "cndl_wind_topc.mat", 209  },
                {  "cndl_wind_sded.mat", 210  },
                {  "cndl_wind_topd.mat", 211  },
                {  "riv_coin.mat", 212  },
                {  "shs_mondr_key_fr.mat", 213  },
                {  "shs_mondr_key_sd.mat", 214  },
                {  "flpotsd.mat", 215  },
                {  "flpottp.mat", 216  },
                {  "flbulb.mat", 217  },
                {  "flleaf.mat", 218  },
                {  "flpetalbig.mat", 219  },
                {  "jar_oil_hndl.mat", 220  },
                {  "jar_oil_cork.mat", 221  },
                {  "dksdblue.mat", 222  },
                {  "dkchainblue4.mat", 223  },
                {  "dkchain4.mat", 224  },
                {  "key_pdlck_rim.mat", 225  },
                {  "key_pdlck_tip.mat", 226  },
                {  "key_4pdlck_hndl.mat", 227  },
                {  "key_pdlck_sde.mat", 228  },
                {  "shvl_fold_spad.mat", 229  },
                {  "shvl_fold_brkt.mat", 230  },
                {  "lag_zero_prop.mat", 231  },
                {  "hammer_sde.mat", 232  },
                {  "hammer_hndl.mat", 233  },
                {  "hammer_nose.mat", 234  },
                {  "dvice_armng_pin.mat", 235  },
                {  "dvice_armng_cap.mat", 236  },
                {  "dvice_armng_dsc.mat", 237  },
                {  "dvice_armng_tube.mat", 238  },
                {  "crnk_rsty_sde.mat", 239  },
                {  "key_statue_side.mat", 240  },
                {  "key_statue_face.mat", 241  },
                {  "key_statueb_side.mat", 242  },
                {  "key_statueb_face.mat", 243  },
                {  "key_mnky_bmbu.mat", 244  },
                {  "key_mnky_body.mat", 245  },
                {  "tem_sharkey.mat", 246  },
                {  "key_water_sdea.mat", 247  },
                {  "key_water_tooth.mat", 248  },
                {  "key_water_sdeb.mat", 249  },
                {  "idol_bird_sde.mat", 250  },
                {  "idol_bird_bck.mat", 251  },
                {  "idol_fish_bse.mat", 252  },
                {  "idol_fish_sde.mat", 253  },
                {  "idol_jag_back.mat", 254  },
                {  "idol_jag_side.mat", 255  },
                {  "mirror_a_statue.mat", 256  },
                {  "minecar_wheelside.mat", 257  },
                {  "minecar_gascap.mat", 258  },
                {  "gem_4eye_front.mat", 259  },
                {  "watop.mat", 260  },
                {  "wabk.mat", 261  },
                {  "wabm.mat", 262  },
                {  "waknob.mat", 263  },
                {  "wa1ring.mat", 264  },
                {  "wa1chain.mat", 265  },
                {  "elvatr_rock_chain.mat", 266  },
                {  "jcan_redfrnt.mat", 267  },
                {  "jcan_redbot.mat", 268  },
                {  "kndlng_cone_side.mat", 269  },
                {  "kndlng_cone_top.mat", 270  },
                {  "oilcan_oz_top.mat", 271  },
                {  "oilcan_oz_noz.mat", 272  },
                {  "oilcan_4oz_hndl.mat", 273  },
                {  "fuse_rplc_tip.mat", 274  },
                {  "fuse_4rplc_gls.mat", 275  },
                {  "fuse_rplc_end.mat", 276  },
                {  "fuse_rplc_in.mat", 277  },
                {  "sol_4gem_green.mat", 278  },
                {  "sol_4gem_blue.mat", 279  },
                {  "sol_4gem_red.mat", 280  },
                {  "pymd_key_top.mat", 281  },
                {  "pymd_key_eye.mat", 282  },
                {  "gen_lever_arm.mat", 283  },
                {  "gen_lever_grip.mat", 284  },
                {  "anlhandm.mat", 285  },
                {  "rigear.mat", 286  },
                {  "key_elvtr_rim.mat", 287  },
                {  "key_elvtr_teth.mat", 288  },
                {  "key_elvtr_pin.mat", 289  },
                {  "rbeye.mat", 290  },
                {  "pikes_floor_frnt.mat", 291  },
                {  "pikes_floor_top.mat", 292  },
                {  "fsfr.mat", 293  },
                {  "fssd.mat", 294  },
                {  "key_sqr_sdea.mat", 295  },
                {  "key_sqr_tooth.mat", 296  },
                {  "key_sqr_sdeb.mat", 297  },
                {  "shvl_fold_hndl.mat", 298  },
                {  "key_mnky_end.mat", 299  },
                {  "minecar_bumper.mat", 300  },
                {  "gem_4eye_ball.mat", 301  },
                {  "jcan_redtop.mat", 302  },
                {  "key_elvtr_hndl.mat", 303  },
                {  "minecar_wheelrim.mat", 304  },
                {  "inshleg.mat", 305  },
                {  "inshthigh.mat", 306  },
                {  "inshbutt.mat", 307  },
                {  "inshhip.mat", 308  },
                {  "insh4arm.mat", 309  },
                {  "insharm.mat", 310  },
                {  "inhat.mat", 311  },
                {  "inneck.mat", 312  },
                {  "in4arm.mat", 313  },
                {  "inarm.mat", 314  },
                {  "bullet_4streak.mat", 315  },
                {  "gen_4imp1_circle.mat", 316  },
                {  "gen_a4sfx_imp2fire.mat", 317  },
                {  "gen_a4sfx_splash.mat", 318  },
                {  "gen_a4sfx_wake.mat", 319  },
                {  "gen_a4xplod_blast.mat", 320  },
                {  "gen_a4xplod_fire.mat", 321  },
                {  "gen_a4xplod_smoke.mat", 322  },
                {  "iq_icon.mat", 323  },
                {  "dflt.mat", 324  },
                {  "dksd.mat", 325  },
                {  "in33_whip.mat", 326  },
                {  "jar_oil_sde.mat", 327  },
                {  "in33_gunhand.mat", 328  },
                {  "in33_hand.mat", 329  },
                {  "in33_shirtfrn.mat", 330  },
                {  "gen_icon_bite.mat", 331  },
                {  "vol_tram_car_plate.mat", 332  },
                {  "vol_tram_car_wheel.mat", 333  },
                {  "tozbarl.mat", 334  },
                {  "inpaddl.mat", 335  },
                {  "obj_sol_4key_oil.mat", 336  },
                {  "vol_wall_logs_weathered.mat", 337  },
                {  "obj_vol_4key_cuffs.mat", 338  },
                {  "mrhdfr.mat", 339  },
                {  "hoist_boat_hndl.mat", 340  },
                {  "hoist_4boat_whl.mat", 341  },
                {  "hoist_boat_pin.mat", 342  },
                {  "potshard.mat", 343  },
                {  "potshardbk.mat", 344  },
                {  "obj_shs_4key_lady.mat", 345  },
                {  "gearbridge4.mat", 346  },
                {  "gearcsmoon4.mat", 347  },
                {  "bucket_wood_hndl.mat", 348  },
                {  "bucket_wood_bot.mat", 349  },
                {  "bucket_wood_sde.mat", 350  },
                {  "flpetalout.mat", 351  },
                {  "gen_herb_stem.mat", 352  },
                {  "gen_4herb_leaf.mat", 353  },
                {  "gen_a4sprite_breath.mat", 354  },
                {  "gen_4sfx_bazooka_exhaust.mat", 355  },
                {  "rckt_a4bzoka_fire.mat", 356  },
                {  "sign_dngr_frame.mat", 357  },
                {  "gen_icon_bite_bot.mat", 358  },
                {  "aet_4sprite_glow_fairy_dust.mat", 359  },
                {  "obj_vol_4key_sharkgate.mat", 360  },
                {  "gen_chicken_leg.mat", 361  },
                {  "gen_4chicken.mat", 362  },
                {  "gen_a4weap_fire.mat", 363  },
                {  "wmgem4.mat", 364  },
                {  "gbtorsfr.mat", 365  },
                {  "gbtorsbk.mat", 366  },
                {  "gen_a4_mc_exhaust.mat", 367  },
                {  "iq_iconsd.mat", 368  },
                {  "ziflame4.mat", 369  },
                {  "gen_4sprite_glow_on_imp.mat", 370  },
                {  "imp_handle.mat", 371  },
                {  "gen_4icon_chalk_diamond.mat", 372  },
                {  "imp5_cube4.mat", 373  },
                {  "obj_aet_4gem.mat", 374  },
                {  "gen_4_1947.mat", 375  },
                {  "gen_4_triangle.mat", 376  },
                {  "gen_4_r2d2.mat", 377  },
                {  "gen_4_sankarastones.mat", 378  },
                {  "gen_4_selfportrait.mat", 379  },
                {  "gen_4_skull.mat", 380  },
                {  "gen_4_snake.mat", 381  },
                {  "gen_4_square.mat", 382  },
                {  "gen_4_star.mat", 383  },
                {  "gen_4_sunrise.mat", 384  },
                {  "gen_4_tentacle.mat", 385  },
                {  "gen_4_five.mat", 386  },
                {  "gen_4_hammer&sickle.mat", 387  },
                {  "gen_4_hawk.mat", 388  },
                {  "gen_4_holygrail.mat", 389  },
                {  "gen_4_pound.mat", 390  },
                {  "gen_4_pyramid.mat", 391  },
                {  "gen_4_questionmark.mat", 392  },
                {  "gen_4_ark.mat", 393  },
                {  "gen_4_coronadocross.mat", 394  },
                {  "gen_4_eye.mat", 395  },
                {  "gen_4_alien.mat", 396  },
                {  "gen_4_ankh.mat", 397  },
                {  "gen_4_tictactoe.mat", 398  },
                {  "mirror_a_statue_back.mat", 399  },
                {  "obj_1box_cash_hnge.mat", 400  },
                {  "obj_box_cash_side.mat", 401  },
                {  "obj_1box_cash_latch.mat", 402  },
                {  "obj_box_cash_in.mat", 403  },
                {  "obj_box_cash_top.mat", 404  },
                {  "obj_box_cash_lid.mat", 405  },
                {  "dksdred.mat", 406  },
                {  "imp2red4off.mat", 407  },
                {  "imp2blue4off.mat", 408  },
                {  "inteeth.mat", 409  },
                {  "gen_4gun_rev_inv.mat", 410  },
                {  "weapon_4tokarev_sde_inv.mat", 411  },
                {  "weapon_4mauser_sde_inv.mat", 412  },
                {  "simonov4_inv.mat", 413  },
                {  "ppsh-41_4_inv.mat", 414  },
                {  "toz4_inv.mat", 415  },
                {  "gen_4gun_bazooka_inv.mat", 416  },
                {  "mrlegs.mat", 417  },
                {  "gen_a4xplod_floater.mat", 418  },
                {  "gen_a4xplod_uw.mat", 419  },
                {  "gen_a4sprite_blood_grn.mat", 420  },
                {  "gen_1particle_water_splash.mat", 421  },
                {  "obj_gen_raft_icon_sde.mat", 422  },
                {  "obj_gen_raft_icon_cap.mat", 423  },

            };

            models = {
                "weap_gloves_inv.3do",
                "weap_whip_inv.3do",
                "weap_revolver_inv.3do",
                "weap_tokarev_inv.3do",
                "weap_simonov_inv.3do",
                "weap_ppsh41_inv.3do",
                "weap_mauser_inv.3do",
                "weap_toz34_inv.3do",
                "weap_bazooka_inv.3do",
                "weap_grenade_inv.3do",
                "weap_satchel_inv.3do",
                "weap_machete_inv.3do",
                "gen_icon_hlthsml.3do",
                "gen_icon_hlthbig.3do",
                "gen_icon_film.3do",
                "gen_icon_camera.3do",
                "gen_icon_type.3do",
                "gen_icon_tv.3do",
                "gen_icon_radio.3do",
                "gen_icon_telgrf.3do",
                "gen_icon_zippo.3do",
                "gen_icon_chest.3do",
                "gen_icon_exit.3do",
                "gen_coins_gold.3do",
                "gen_coins_slvr.3do",
                "gen_idol_gold.3do",
                "gen_idol_slvr.3do",
                "gen_ingots_gold.3do",
                "gen_ingots_slvr.3do",
                "hand_in_ziplit.3do",
                "hand_in_zippo.3do",
                "weap_whip.3do",
                "weap_whipcoil.3do",
                "weap_revolver.3do",
                "weap_tokarev.3do",
                "weap_simonov.3do",
                "weap_ppsh41.3do",
                "weap_mauser.3do",
                "weap_toz34.3do",
                "weap_bazooka.3do",
                "weap_machete.3do",
                "holster_in_revolver.3do",
                "holster_in_mauser.3do",
                "holster_in_tokarev.3do",
                "torso_in_bazooka.3do",
                "torso_in_machete.3do",
                "torso_in_sheath.3do",
                "torso_in_ppsh-41.3do",
                "torso_in_simonov.3do",
                "torso_in_toz-34.3do",
                "torso_shirt_bazooka.3do",
                "torso_shirt_machete.3do",
                "torso_shirt_sheath.3do",
                "torso_shirt_ppsh-41.3do",
                "torso_shirt_simonov.3do",
                "torso_shirt_toz-34.3do",
                "weap_whip_hip.3do",
                "riv_raft_inflt1_inv.3do",
                "weap_grenade.3do",
                "gen_icon_bonusmap.3do",
                "gen_icon_hint_on.3do",
                "weap_satchel.3do",
                "head_in_asound.3do",
                "head_in_amsound.3do",
                "head_in_osound.3do",
                "head_in_asound_gh.3do",
                "head_in_amsound_gh.3do",
                "head_in_osound_gh.3do",
                "gen_icon_chalk.3do",
                "imp1_vibrat_inv.3do",
                "imp1_vibrat.3do",
                "imp1_vibrat_on.3do",
                "imp2_invis_inv.3do",
                "imp2_invis.3do",
                "imp2_invis_on.3do",
                "imp3_levit_inv.3do",
                "imp3_levit.3do",
                "imp3_levit_on.3do",
                "imp4_energ_inv.3do",
                "imp4_energ.3do",
                "imp4_energ_on.3do",
                "weap_mauser_fire.3do",
                "weap_ppsh41_fire.3do",
                "weap_revolver_fire.3do",
                "weap_simonov_fire.3do",
                "weap_tokarev_fire.3do",
                "weap_toz34_fire.3do",
                "gen_rckt_bzooka.3do",
                "gen_ammo_mauser.3do",
                "gen_ammo_ppsh41.3do",
                "gen_ammo_simonov.3do",
                "gen_ammo_tokarev.3do",
                "gen_ammo_toz34.3do",
                "gen_icon_help.3do",
                "gen_gem_red.3do",
                "gen_gem_green.3do",
                "gen_gem_blue.3do",
                "bab_tu_key.3do",
                "bab_tblt_a.3do",
                "bab_tblt_b.3do",
                "bab_tblt_c.3do",
                "bab_idol_mrdk.3do",
                "riv_kit_ptch.3do",
                "riv_cndl_awind.3do",
                "riv_cndl_bwind.3do",
                "riv_cndl_cwind.3do",
                "riv_cndl_dwind.3do",
                "riv_coin.3do",
                "shs_key_sealdoor.3do",
                "shs_bulb_pot.3do",
                "shs_bulb_leafstem.3do",
                "shs_bulb_bud.3do",
                "shw_jar_oil.3do",
                "shw_divkeyblue.3do",
                "shw_divkeygold.3do",
                "lag_key_pdlck.3do",
                "lag_shovel_fold.3do",
                "lag_plane_prop.3do",
                "lag_hammer_small.3do",
                "lag_dvice_armng.3do",
                "lag_crnk_rsty.3do",
                "tem_key_statue.3do",
                "tem_key_statue_b.3do",
                "tem_key_mnky.3do",
                "tem_sharkey.3do",
                "teo_key_water.3do",
                "teo_idol_bird.3do",
                "teo_idol_fish.3do",
                "teo_idol_jag.3do",
                "teo_mirror.3do",
                "pyr_minecar_whl.3do",
                "pyr_gem_eye.3do",
                "pyr_watch.3do",
                "pyr_ngin_chain.3do",
                "bab_jcan_gas.3do",
                "pyr_kndlng_cone.3do",
                "sol_oilcan_oz.3do",
                "sol_fuse_rplc.3do",
                "sol_gem_a.3do",
                "sol_gem_b.3do",
                "sol_gem_c.3do",
                "sol_pymd_key.3do",
                "gen_lever_stick.3do",
                "nub_anubis_arm.3do",
                "nub_gear_turtle.3do",
                "nub_key_elvtr.3do",
                "nub_rb_eye.3do",
                "tem_pikes_floor.3do",
                "pru_idol.3do",
                "pru_key_sqr.3do",
                "iq_icon.3do",
                "gen_icon_bite.3do",
                "vol_tram_wheel.3do",
                "hand_ir_lpad.3do",
                "hand_ir_rpad.3do",
                "sol_key_oil.3do",
                "shs_plank_2m.3do",
                "vol_key_cuffs.3do",
                "aet_marduk_key.3do",
                "inf_robo_head.3do",
                "gen_icon_crnk.3do",
                "cyn_potshard.3do",
                "shs_key_lady.3do",
                "gen_bronz_key.3do",
                "bab_gear_elev.3do",
                "vol_key_sharkgate.3do",
                "imp5_dial_inv.3do",
                "imp5_dial.3do",
                "imp5_dial_on.3do",
                "gen_bucket_wood.3do",
                "weap_machete_sheath.3do",
                "gen_herb_small.3do",
                "gen_herb_big.3do",
                "head_in_goodhair.3do",
                "hand_in_hat.3do",
                "gen_chicken.3do",
                "torso_guy_bazooka.3do",
                "torso_guy_machete.3do",
                "torso_guy_ppsh-41.3do",
                "torso_guy_sheath.3do",
                "torso_guy_simonov.3do",
                "torso_guy_toz-34.3do",
                "gen_tracer.3do",
                "aet_gem04.3do",
                "riv_box_cash.3do",
                "shw_divkeyred.3do",
                "weap_rocket_pack.3do",
                "weap_grenade_pack.3do",
                "weap_satchel_pack.3do",
                "aet_mirror.3do",
                "hand_in_mirror.3do",
            };

            sprites = {
                "pistol_hit.spr",
                "pistol_smoke1.spr",
                "pistol_smoke2.spr",
                "gen_bloodsplort.spr",
                "bazooka_smoke.spr",
                "gen_explode3.spr",
                "zippo.spr",
                "bubbles.spr",
                "waterripple.spr",
                "x1947.spr",
                "xalien.spr",
                "xankh.spr",
                "xark.spr",
                "xcccr.spr",
                "xcheck.spr",
                "xcircle.spr",
                "xcross.spr",
                "xeye.spr",
                "xfive.spr",
                "xgrail.spr",
                "xguy.spr",
                "xhappy.spr",
                "xhawk.spr",
                "xhere.spr",
                "xindy.spr",
                "xindy2.spr",
                "xla.spr",
                "xlove.spr",
                "xportrait.spr",
                "xpound.spr",
                "xpyramid.spr",
                "xquestion.spr",
                "xr2d2.spr",
                "xskull.spr",
                "xsnake.spr",
                "xsquare.spr",
                "xstar.spr",
                "xstones.spr",
                "xsunrise.spr",
                "xtentacle.spr",
                "xtictactoe.spr",
                "xtriangle.spr",
                "xusa.spr",
                "xmark.spr",
                "bazooka_exhaust.spr",
                "bazooka_expblast.spr",
                "bazooka_expfire.spr",
                "bazooka_expsmoke.spr",
                "bazooka_rocket.spr",
                "imp1_fire.spr",
                "imp1_glow.spr",
                "imp2_fire.spr",
                "imp2_glow.spr",
                "imp3_glow.spr",
                "imp4_glow.spr",
                "imp5_glow.spr",
                "breath.spr",
                "exhaust.spr",
                "aet_expfloater.spr",
                "uw_explode.spr",
                "gen_vulcansplort.spr",
            };

            keyframes = {
                "in_stand.key",
                "in_walk_fwd.key",
                "in_run_fwd.key",
                "in_walk_back.key",
                "in_hop_back.key",
                "in_jump_left_roll.key",
                "in_jump_right_roll.key",
                "in_walk_left.key",
                "in_walk_right.key",
                "in_rotate_left.key",
                "in_rotate_right.key",
                "in_slide_fwd.key",
                "in_slide_back.key",
                "in_run_jump_fwd.key",
                "in_jump_anticipate.key",
                "in_jump_up.key",
                "in_jump_fwd.key",
                "in_jump_fall.key",
                "in_die_buckle.key",
                "in_die_flung.key",
                "in_reach_low.key",
                "in_pushpull_anticipate.key",
                "in_push_block.key",
                "in_pull_block.key",
                "in_pull_up.key",
                "in_hang_idle.key",
                "in_shimmy_left.key",
                "in_shimmy_right.key",
                "in_climb_on.key",
                "in_climb_idle.key",
                "in_climb_up.key",
                "in_climb_down.key",
                "in_climb_left.key",
                "in_climb_right.key",
                "in_clmb_pull_onto_ledge.key",
                "in_whipclimb_on.key",
                "in_whipclimb_idle.key",
                "in_whipclimb_up.key",
                "in_whipclimb_down.key",
                "in_whipclimb_rotl.key",
                "in_whipclimb_rotr.key",
                "in_jump_off.key",
                "in_attack_whip_strut.key",
                "in_whipswing.key",
                "in_mount.key",
                "in_climb_onto_2m.key",
                "in_jump_backflip.key",
                "in_jump_fwdroll.key",
                "in_jump_up_land.key",
                "in_run_jumpl.key",
                "in_run_jumpr.key",
                "in_activate_medium.key",
                "in_reach_high.key",
                "in_attack_pull_fists.key",
                "in_attack_put_fists.key",
                "in_attack_fistl_hook.key",
                "in_attack_fistl_jab.key",
                "in_attack_fistr_straight.key",
                "in_attack_fistr_upper.key",
                "in_stand_bd_crawl.key",
                "in_climb_down_onto_wall.key",
                "in_climb_down_into_hang.key",
                "in_attack_pull_whip.key",
                "in_attack_aim_whip.key",
                "in_attack_put_whip.key",
                "in_attack_fire_whip.key",
                "in_attack_unravel_whip.key",
                "in_attack_ravel_whip.key",
                "in_attack_pull_gun.key",
                "in_attack_aim_gun.key",
                "in_attack_put_gun.key",
                "in_attack_fire_gun.key",
                "in_attack_pull_rifle.key",
                "in_attack_aim_rifle.key",
                "in_attack_put_rifle.key",
                "in_attack_fire_rifle.key",
                "in_attack_unaim_rifle.key",
                "in_attack_aim_shotgun.key",
                "in_attack_fire_shotgun.key",
                "in_attack_fire_submachine.key",
                "in_attack_unaim_shotgun.key",
                "in_attack_pull_bazooka.key",
                "in_attack_put_bazooka.key",
                "in_attack_fire_bazooka.key",
                "in_attack_pull_grenade.key",
                "in_attack_aim_grenade.key",
                "in_attack_put_grenade.key",
                "in_attack_fire_grenade.key",
                "in_attack_pull_satchel.key",
                "in_attack_put_satchel.key",
                "in_attack_fire_satchel.key",
                "in_attack_pull_machete.key",
                "in_attack_put_machete.key",
                "in_attack_fire_macheter.key",
                "in_attack_fire_machetel.key",
                "in_pull_zippo.key",
                "in_put_zippo.key",
                "in_swim_float.key",
                "in_swim_fwd.key",
                "in_uw_swim.key",
                "in_swim_back.key",
                "in_swim_rotate_l.key",
                "in_swim_rotate_r.key",
                "in_uw_float.key",
                "in_uw_die.key",
                "in_uw_pickup.key",
                "in_swim_pullup.key",
                "in_submerge.key",
                "in_uw_pullswitch.key",
                "in_uw_attack_put_fists.key",
                "in_uw_attack_put_whip.key",
                "in_uw_attack_pull_machete.key",
                "in_uw_attack_put_machete.key",
                "in_uw_attack_fire_machete.key",
                "in_uw_attack_put_bazooka.key",
                "in_uw_attack_put_grenade.key",
                "in_uw_attack_put_gun.key",
                "in_uw_attack_put_imp.key",
                "in_uw_attack_put_satchel.key",
                "in_uw_attack_put_mirror.key",
                "in_uw_put_zippo.key",
                "in_crawl_idle.key",
                "in_crawl_fwd.key",
                "in_crawl_back.key",
                "in_crawl_rotatel.key",
                "in_crawl_rotater.key",
                "in_crawl_bd_stand.key",
                "in_crawl_activate.key",
                "in_chalk.key",
                "in_hit_wall_soft.key",
                "in_hit_wall_hard.key",
                "in_jump_up_grab.key",
                "in_slide_fwd_recover.key",
                "in_stand_bd_walk.key",
                "in_walk_bd_stand.key",
                "in_attack_pull_imp.key",
                "in_attack_put_imp.key",
                "in_imp3_float.key",
                "in_pickup_low.key",
                "in_pickup_med.key",
                "in_swim_mount.key",
                "in_rotate90_left.key",
                "in_rotate90_right.key",
                "in_attack_pull_mirror.key",
                "in_attack_put_mirror.key",
                "in_pickup_dark.key",
                "1h_stand.key",
                "1h_stand_idle.key",
                "1h_walk_fwd.key",
                "1h_walk_back.key",
                "1h_run_fwd.key",
                "1h_rotate_left.key",
                "1h_rotate_right.key",
                "1h_die_roll.key",
                "1h_die_forward.key",
                "1h_die_flung.key",
                "1h_getup.key",
                "1h_attack_pull_fists.key",
                "1h_attack_fistl_hook.key",
                "1h_attack_fistl_jab.key",
                "1h_attack_fistr_straight.key",
                "1h_attack_fistr_upper.key",
                "1h_attack_pull_gun.key",
                "1h_attack_aim_gun.key",
                "1h_attack_fire_gun.key",
                "1h_attack_fire_grenade.key",
                "1h_roll_left.key",
                "1h_roll_right.key",
                "2h_stand.key",
                "2h_stand_idle.key",
                "2h_walk_fwd.key",
                "2h_walk_back.key",
                "2h_run_fwd.key",
                "2h_rotate_left.key",
                "2h_rotate_right.key",
                "2h_die_roll.key",
                "2h_die_forward.key",
                "2h_die_flung.key",
                "2h_getup.key",
                "2h_attack_pull_fists.key",
                "2h_attack_fistl_hook.key",
                "2h_attack_fistl_jab.key",
                "2h_attack_fistr_straight.key",
                "2h_attack_fistr_upper.key",
                "2h_attack_pull_rifle.key",
                "2h_attack_aim_rifle.key",
                "2h_attack_unaim_rifle.key",
                "2h_attack_fire_rifle.key",
                "2h_attack_aim_shotgun.key",
                "2h_attack_unaim_shotgun.key",
                "2h_attack_fire_shotgun.key",
                "2h_attack_fire_submachine.key",
                "2h_roll_left.key",
                "2h_roll_right.key",
                "gen_chicken.key",
                "wh_attack_whip_fire.key",
                "wh_attack_whip_unravel.key",
                "wh_attack_whip_ravel.key",
                "wh_whipclimb_on.key",
                "wh_whipclimb_idle.key",
                "wh_whipswing.key",
                "wc_stand.key",
                "wc_jump_off.key",
                "in_climb_down_onto_angledwall.key",
            };

            scripts = {
                "item_pickuplines.cog",
                "item_healthbig.cog",
                "item_healthsml.cog",
                "item_yerbisma.cog",
                "item_yerbita.cog",
                "item_poisonkit.cog",
                "weap_zippo.cog",
                "weap_fists.cog",
                "weap_whip.cog",
                "weap_pistol.cog",
                "weap_tokarev.cog",
                "weap_mauser.cog",
                "weap_simonov.cog",
                "weap_submachine.cog",
                "weap_shotgun.cog",
                "weap_bazooka.cog",
                "weap_machete.cog",
                "weap_grenade.cog",
                "weap_satchel.cog",
                "weap_imp1.cog",
                "weap_imp2.cog",
                "weap_imp3.cog",
                "weap_imp4.cog",
                "weap_imp5.cog",
                "weap_mirror.cog",
                "com_fists.cog",
                "com_tokarev.cog",
                "com_mauser.cog",
                "com_simonov.cog",
                "com_submachine.cog",
                "com_shotgun.cog",
                "cheat_allweapons.cog",
                "cheat_whatailsya.cog",

            };
        }
    };
}

#endif // CNDTOOL_RESOURCE_H
